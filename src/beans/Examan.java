package beans;

// Generated 4 juin 2017 11:38:45 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Examan generated by hbm2java
 */
@Entity
@Table(name = "examan", catalog = "gestion_pv")
public class Examan implements java.io.Serializable {

	private Integer idExaman;
	private String nomMatier;
	private Date dateExaman;
	private String type;
	private Set<Senction> senctions = new HashSet<Senction>(0);

	public Examan() {
	}

	public Examan(String nomMatier, Date dateExaman, String type) {
		this.nomMatier = nomMatier;
		this.dateExaman = dateExaman;
		this.type = type;
	}

	public Examan(String nomMatier, Date dateExaman, String type,
			Set<Senction> senctions) {
		this.nomMatier = nomMatier;
		this.dateExaman = dateExaman;
		this.type = type;
		this.senctions = senctions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idExaman", unique = true, nullable = false)
	public Integer getIdExaman() {
		return this.idExaman;
	}

	public void setIdExaman(Integer idExaman) {
		this.idExaman = idExaman;
	}

	@Column(name = "nomMatier", nullable = false, length = 40)
	public String getNomMatier() {
		return this.nomMatier;
	}

	public void setNomMatier(String nomMatier) {
		this.nomMatier = nomMatier;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dateExaman", nullable = false, length = 0)
	public Date getDateExaman() {
		return this.dateExaman;
	}

	public void setDateExaman(Date dateExaman) {
		this.dateExaman = dateExaman;
	}

	@Column(name = "type", nullable = false, length = 40)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "examan")
	public Set<Senction> getSenctions() {
		return this.senctions;
	}

	public void setSenctions(Set<Senction> senctions) {
		this.senctions = senctions;
	}

}
